// Code generated by oto; DO NOT EDIT.

'use strict';

<%= for (service) in def.Services { %> 
export class <%= service.Name %> {
	<%= for (method) in service.Methods { %>
	/**
	* @param {string} url URL of kite backend. Can be left blank.
	* @param <%= camelize_down(method.InputObject.TypeName) %> <%= method.InputObject.TypeID %>
	*/
	async <%= camelize_down(method.Name) %>(url, <%= camelize_down(method.InputObject.TypeName) %>) {
		const headers = {
			'Accept':		'application/json',
			'Accept-Encoding':	'gzip',
			'Content-Type':		'application/json',
		}
		<%= camelize_down(method.InputObject.TypeName) %> = <%= camelize_down(method.InputObject.TypeName) %> || {}
		const response = await fetch(`${url}/oto/<%= service.Name %>.<%= method.Name %>`, {
			method: 'POST',
			headers: headers,
			body: JSON.stringify(<%= camelize_down(method.InputObject.TypeName) %>)
		})
		return response.json().then((json) => {
			if (json.error) {
				throw new Error(json.error)
			}
			return json
		})
	}
	<% } %>
}
<% } %>